{"version":3,"sources":["components/Footer.js","utils/Elements.js","components/Navbar.js","components/Loading.js","utils/Animation.js","services/Api.js","services/Character.service.js","services/Location.service.js","services/Episode.service.js","views/Characters.js","views/CharacterDetail.js","views/Episodes.js","views/Home.js","views/Locations.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","require","default","footer","Footer","Container","styled","div","Button","button","Row","Column","ColumnContent","Info","InfoHeader","span","Pager","PageLink","nav","Brands","NavMenu","NavItem","NavSearchWrapper","NavSearch","input","Navbar","to","activeClassName","placeholder","LoadingWrapper","LoadingMessage","Loading","color","loading","size","FadeIn","keyframes","SlideUp","API","axios","create","baseURL","timeout","getCharacterCount","a","get","response","status","data","info","count","error","statusText","getCharacters","page","query","getCharacterDetail","id","getLocationCount","getLocations","getEpisodeCount","getEpisodes","CharacterImage","img","statusColor","Alive","Dead","unknown","CharacterStatus","props","CharacterColumns","Characters","state","ready","maxPage","this","parseInt","setState","results","map","character","src","image","name","species","gender","type","origin","getData","prevProps","PageLinks","index","pages","push","slice","hidden","icon","faChevronLeft","faChevronRight","React","Component","CharacterDetail","alt","location","EpisodeColumns","Episodes","episode","air_date","InfoWrapper","LogoWrapper","Logo","NetflixLink","NetflixLogo","Body","character_count","episode_count","location_count","key","target","temp","interval","setInterval","value","clearInterval","increaseValue","href","rel","Home","LocationColumns","Locations","dimension","CharacterChild","useParams","CharacterDetailChild","LocationChild","EpisodeChild","Routes","path","children","component","exact","render","View","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b98e954.chunk.js","sourcesContent":["const { default: styled } = require(\"styled-components\");\n\nconst Wrapper = styled.footer`\n  margin-top: 5rem;\n  padding: 1rem;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  span {\n    padding: 0.5rem;\n  }\n`;\n\nconst Footer = () => (\n  <Wrapper>\n    <span>This website was created for study purpose</span>\n    <span>R.Phuwanat 2021</span>\n  </Wrapper>\n);\n\nexport default Footer;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 1140px;\n  margin: auto;\n`;\n\nexport const Button = styled.button`\n  padding: 0.5rem 1.5rem;\n  margin: 0 0.5rem;\n  color: var(--font-color);\n  border: 1px solid transparent;\n  background-color: var(--primary);\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: background-color 0.25s ease-out;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    background-color: var(--primary-dark);\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -1rem;\n`;\n\nexport const Column = styled.div`\n  flex: 1 1 40%;\n  margin: 1rem;\n  border-radius: 0.5rem;\n  background-color: #2b2b2b;\n  transition: all 0.25s ease;\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const ColumnContent = styled.div`\n  display: flex;\n  padding: 1rem;\n  line-height: 1.5;\n  & > * {\n    padding: 0 0.25rem;\n  }\n`;\n\nexport const Info = styled.div`\n  flex: 1 1;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.7rem;\n  line-height: 1.5;\n`;\n\nexport const InfoHeader = styled.span`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--primary);\n`;\n\nexport const Pager = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n`;\n\nexport const PageLink = styled.div`\n  padding: 0 0.25rem;\n  a:not(.active) {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n","import { NavLink } from \"react-router-dom\";\nimport { Button } from \"../utils/Elements\";\n\nconst { default: styled } = require(\"styled-components\");\n\nconst Wrapper = styled.nav`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  width: auto;\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  background-color: rgba(0, 0, 0, 0.9);\n`;\n\nconst Brands = styled.div`\n  position: relative;\n  z-index: 1;\n  text-decoration: none;\n  color: var(--font-color);\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n\nconst NavMenu = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst NavItem = styled.div`\n  a {\n    display: inline-block;\n    color: var(--font-color);\n    text-decoration: none;\n    margin: 0 1rem;\n    &::after {\n      content: \"\";\n      display: block;\n      height: 4px;\n      background-color: var(--font-color);\n      transform: scale(0);\n      transform-origin: top left;\n      transition: transform 0.25s ease;\n    }\n    &:hover {\n      &::after {\n        transform: scale(1);\n      }\n    }\n    &.active {\n      color: var(--primary);\n      &::after {\n        transform: scale(1);\n        background-color: var(--primary) !important;\n      }\n    }\n  }\n`;\n\nconst NavSearchWrapper = styled.div`\n  position: relative;\n  z-index: 1;\n`;\n\nconst NavSearch = styled.input`\n  appearance: none;\n  padding: 0.5rem 1rem;\n  background: none;\n  border: 1px solid #ddd;\n  border-radius: 0.5rem;\n  color: var(--font-color);\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Navbar = () => (\n  <Wrapper>\n    <Brands>Ricky Wiki</Brands>\n    <NavMenu>\n      <NavItem>\n        <NavLink to=\"/home\" activeClassName=\"active\">\n          Home\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink to=\"/characters\" activeClassName=\"active\">\n          Characters\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink to=\"/locations\" activeClassName=\"active\">\n          Locations\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink to=\"/episodes\" activeClassName=\"active\">\n          Episodes\n        </NavLink>\n      </NavItem>\n    </NavMenu>\n    <NavSearchWrapper>\n      <NavSearch placeholder=\"Search\" />\n      <Button>Search</Button>\n    </NavSearchWrapper>\n  </Wrapper>\n);\nexport default Navbar;\n","import { DotLoader } from \"react-spinners\";\nimport styled from \"styled-components\";\n\nconst LoadingWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 5;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #000000;\n`;\n\nconst LoadingMessage = styled.div`\n  display: flex;\n  align-items: center;\n  & > * {\n    margin: 0 0.25rem;\n  }\n`;\n\nconst Loading = () => (\n  <LoadingWrapper>\n    <LoadingMessage>\n      <span>Loading</span>\n      <DotLoader color=\"#ddd\" loading={true} size={32} />\n    </LoadingMessage>\n  </LoadingWrapper>\n);\n\nexport default Loading;\n","import { keyframes } from \"styled-components\";\n\nexport const FadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const SlideUp = keyframes`\nfrom {\n  transform: translateY(150%);\n}\nto {\n  transform: translateY(0);\n}\n`;\n","import axios from \"axios\";\n\nconst API = axios.create({\n  baseURL: \"https://rickandmortyapi.com/api\",\n  timeout: 5000\n});\nexport default API;\n","import API from \"./Api\";\n\n/**\n * Get amount of character\n * @returns {Number} amount of character\n */\nexport async function getCharacterCount() {\n  const response = await API.get(\"/character\");\n  return response.status === 200\n    ? response.data.info.count\n    : { error: response.statusText };\n}\n/**\n *\n * @param {Number | String} page Page to get\n * @returns {object} Response data\n */\nexport async function getCharacters(page) {\n  var query = \"\";\n  if (page) query += `/?page=${page}`;\n  const response = await API.get(`/character${query}`);\n  return response.status === 200\n    ? response.data\n    : { error: response.statusText };\n}\n/**\n *\n * @param {Number | String} id Character ID\n * @returns {object} Character data\n */\nexport async function getCharacterDetail(id) {\n  const response = await API.get(`/character/${id}`);\n  return response.status === 200\n    ? response.data\n    : { error: response.statusText };\n}\n","import API from \"./Api\";\n\nexport async function getLocationCount() {\n  const { data } = await API.get(\"/location\");\n  return data ? data.info.count : 0;\n}\n/**\n *\n * @param {Number | String} page Page to get\n * @returns {object} Response data\n */\nexport async function getLocations(page) {\n  var query = \"\";\n  if (page) query += `/?page=${page}`;\n  const response = await API.get(`/location${query}`);\n  return response.status === 200\n    ? response.data\n    : { error: response.statusText };\n}\n","import API from \"./Api\";\n\nexport async function getEpisodeCount() {\n  const { data } = await API.get(\"/episode\");\n  return data? data.info.count : 0;\n}\n\nexport async function getEpisodes(page) {\n  var query = \"\";\n  if (page) query += `/?page=${page}`;\n  const response = await API.get(`/episode${query}`);\n  return response.status === 200\n    ? response.data\n    : { error: response.statusText };\n}","import {\n  faChevronLeft,\n  faChevronRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Loading from \"../components/Loading\";\nimport { FadeIn } from \"../utils/Animation\";\nimport { getCharacters } from \"../services\";\nimport {\n  Column,\n  ColumnContent,\n  Container,\n  Info,\n  InfoHeader,\n  PageLink,\n  Pager,\n  Row\n} from \"../utils/Elements\";\n\nconst Wrapper = styled(Container)`\n  animation: ${FadeIn} 0.3s ease;\n`;\n\nconst CharacterImage = styled.img`\n  width: 128px;\n  height: 128px;\n`;\n\nconst statusColor = {\n  Alive: \"green\",\n  Dead: \"red\",\n  unknown: \"cyan\"\n};\n\nconst CharacterStatus = styled.span`\n  color: ${props => statusColor[props.status]};\n`;\n\nlet CharacterColumns = null;\nexport default class Characters extends React.Component {\n  state = {\n    ready: false\n  };\n  data = null;\n  page = null;\n  maxPage = 0;\n\n  async getData() {\n    this.page = parseInt(this.props.page);\n    this.setState({ ready: false });\n    const data = await getCharacters(this.page);\n    this.data = data;\n    CharacterColumns = data.results.map(character => (\n      <Column key={`${character.id}-card`}>\n        <Link to={`/characters/detail/${character.id}`}>\n          <ColumnContent>\n            <CharacterImage src={character.image} />\n            <Info>\n              <InfoHeader>{character.name}</InfoHeader>\n              <div>\n                Status:{\" \"}\n                <CharacterStatus status={character.status}>\n                  {character.status}\n                </CharacterStatus>\n              </div>\n              <span>Species: {character.species}</span>\n              <span>Gender: {character.gender}</span>\n              <span>Type: {character.type ? character.type : \"Normal\"}</span>\n              <span>Origin: {character.origin.name}</span>\n            </Info>\n          </ColumnContent>\n        </Link>\n      </Column>\n    ));\n    this.setState({ ready: true });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.page !== this.props.page) {\n      this.getData();\n    }\n  }\n\n  render() {\n    if (this.state.ready) {\n      let PageLinks = [];\n      for (let index = 1; index <= this.data.info.pages; index++) {\n        PageLinks.push(\n          <PageLink key={`page-${index}`}>\n            <NavLink activeClassName=\"active\" to={`/characters/page/${index}`}>\n              {index}\n            </NavLink>\n          </PageLink>\n        );\n      }\n      this.maxPage = this.page + 2;\n      PageLinks = PageLinks.slice(\n        this.page >= 3\n          ? this.page - (this.maxPage > this.data.info.pages ? 5 : 3)\n          : 0,\n        this.maxPage\n      );\n      return (\n        <div>\n          <Wrapper>\n            <Row>{CharacterColumns}</Row>\n          </Wrapper>\n          <Pager>\n            <PageLink hidden={this.page > 1 ? false : true}>\n              <Link to={`/characters/page/${this.page - 1}`}>\n                <FontAwesomeIcon icon={faChevronLeft} />\n              </Link>\n            </PageLink>\n            {PageLinks}\n            <PageLink\n              hidden={this.maxPage >= this.data.info.pages ? true : false}\n            >\n              ...\n            </PageLink>\n            <PageLink\n              hidden={this.maxPage >= this.data.info.pages ? true : false}\n            >\n              <Link to={`/characters/page/${this.data.info.pages}`}>\n                {this.data.info.pages}\n              </Link>\n            </PageLink>\n            <PageLink\n              hidden={this.maxPage >= this.data.info.pages ? true : false}\n            >\n              <Link to={`/characters/page/${this.page + 1}`}>\n                <FontAwesomeIcon icon={faChevronRight} />\n              </Link>\n            </PageLink>\n          </Pager>\n        </div>\n      );\n    }\n    return <Loading />;\n  }\n}\n","import React from \"react\";\nimport { Container } from \"../utils/Elements\";\nimport Loading from \"../components/Loading\";\nimport { getCharacterDetail } from \"../services\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Wrapper = styled(Container)`\n  padding: 1rem;\n  border-radius: 0.5rem;\n  background-color: #2b2b2b;\n  line-height: 2;\n  display: flex;\n  & > * {\n    flex: 0 1 auto;\n    padding: 0.5rem;\n  }\n`;\n\nconst statusColor = {\n  Alive: \"green\",\n  Dead: \"red\",\n  unknown: \"cyan\"\n};\n\nconst CharacterStatus = styled.span`\n  color: ${props => statusColor[props.status]};\n`;\nexport default class CharacterDetail extends React.Component {\n  state = {\n    ready: false\n  };\n  data = null;\n  async getData() {\n    const data = await getCharacterDetail(this.props.id);\n    this.data = data;\n    this.setState({ ready: true });\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    if (this.state.ready) {\n      return (\n        <Wrapper>\n          <img src={this.data.image} alt={`${this.data.name}-Profile`} />\n          <div>\n            <h3>{this.data.name}</h3>\n            <div>\n              Status:{\" \"}\n              <CharacterStatus status={this.data.status}>\n                {this.data.status}\n              </CharacterStatus>\n            </div>\n            <div>Species: {this.data.species}</div>\n            <div>Gender: {this.data.gender}</div>\n            <div>Type: {this.data.type ? this.data.type : \"Normal\"}</div>\n            <div>\n              Origin: <Link to=\"\">{this.data.origin.name}</Link>\n            </div>\n            <div>\n              Current location: <Link to=\"\">{this.data.location.name}</Link>\n            </div>\n          </div>\n        </Wrapper>\n      );\n    }\n    return <Loading />;\n  }\n}\n","import {\n  faChevronLeft,\n  faChevronRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Loading from \"../components/Loading\";\nimport { FadeIn } from \"../utils/Animation\";\nimport { getEpisodes } from \"../services\";\nimport {\n  Column,\n  ColumnContent,\n  Container,\n  Info,\n  InfoHeader,\n  PageLink,\n  Pager,\n  Row\n} from \"../utils/Elements\";\n\nconst Wrapper = styled(Container)`\n  animation: ${FadeIn} 0.3s ease;\n`;\n\nlet EpisodeColumns = null;\nexport default class Episodes extends React.Component {\n  state = {\n    ready: false\n  };\n  data = null;\n  page = null;\n  maxPage = 0;\n\n  async getData() {\n    this.page = parseInt(this.props.page);\n    this.setState({ ready: false });\n    const data = await getEpisodes(this.page);\n    this.data = data;\n    EpisodeColumns = data.results.map(episode => (\n      <Column key={`${episode.id}-card`}>\n        <ColumnContent>\n          <Info>\n            <InfoHeader>{episode.name}</InfoHeader>\n            <span>Episode: {episode.episode}</span>\n            <span>Air date: {episode.air_date}</span>\n          </Info>\n        </ColumnContent>\n      </Column>\n    ));\n    this.setState({ ready: true });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.page !== this.props.page) {\n      this.getData();\n    }\n  }\n\n  render() {\n    if (this.state.ready) {\n      let PageLinks = [];\n      for (let index = 1; index <= this.data.info.pages; index++) {\n        PageLinks.push(\n          <Pager key={`page-${index}`}>\n            <NavLink activeClassName=\"active\" to={`/episodes/page/${index}`}>\n              {index}\n            </NavLink>\n          </Pager>\n        );\n      }\n      this.maxPage = this.page + 2;\n      PageLinks = PageLinks.slice(\n        this.page >= 3\n          ? this.page -\n              (this.maxPage > this.data.info.pages\n                ? this.data.info.pages > 5\n                  ? 5\n                  : 0\n                : 3)\n          : 0,\n        this.maxPage\n      );\n      return (\n        <div>\n          <Wrapper>\n            <Row>{EpisodeColumns}</Row>\n          </Wrapper>\n          <Pager>\n            <PageLink hidden={this.page > 1 ? false : true}>\n              <Link to={`/episodes/page/${this.page - 1}`}>\n                <FontAwesomeIcon icon={faChevronLeft} />\n              </Link>\n            </PageLink>\n            {PageLinks}\n            <PageLink\n              hidden={this.maxPage >= this.data.info.pages ? true : false}\n            >\n              ...\n            </PageLink>\n            <PageLink\n              hidden={this.maxPage >= this.data.info.pages ? true : false}\n            >\n              <Link to={`/episodes/page/${this.data.info.pages}`}>\n                {this.data.info.pages}\n              </Link>\n            </PageLink>\n            <PageLink\n              hidden={this.maxPage >= this.data.info.pages ? true : false}\n            >\n              <Link to={`/episodes/page/${this.page + 1}`}>\n                <FontAwesomeIcon icon={faChevronRight} />\n              </Link>\n            </PageLink>\n          </Pager>\n        </div>\n      );\n    }\n    return <Loading />;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loading from \"../components/Loading\";\nimport { FadeIn, SlideUp } from \"../utils/Animation\";\nimport {\n  getCharacterCount,\n  getEpisodeCount,\n  getLocationCount\n} from \"../services\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  animation: ${FadeIn} 0.5s ease;\n  & > * {\n    margin-bottom: 3rem;\n    animation: ${SlideUp} 1s ease;\n  }\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Info = styled.div`\n  padding: 0 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LogoWrapper = styled.div`\n  flex: 0;\n  max-width: 1024px;\n  padding: 0.5rem;\n  text-align: center;\n`;\n\nconst Logo = styled.img`\n  width: 100%;\n`;\n\nconst InfoHeader = styled.span`\n  font-size: 4rem;\n`;\nconst NetflixLink = styled.a`\n  color: var(--font-color);\n  text-decoration: none;\n  text-align: center;\n`;\nconst NetflixLogo = styled.img`\n  width: 64px;\n  height: 64px;\n  object-fit: contain;\n`;\n\nclass Body extends React.Component {\n  state = {\n    character_count: 0,\n    episode_count: 0,\n    location_count: 0\n  };\n\n  increaseValue(key, target) {\n    let temp = target - 20;\n    this.setState({ [key]: temp });\n    let interval = setInterval(() => {\n      var value = this.state[key];\n      if (value === target) {\n        clearInterval(interval);\n        return;\n      }\n      value++;\n      this.setState({ [key]: value });\n    }, 70);\n  }\n\n  componentDidMount() {\n    this.increaseValue(\"character_count\", this.props.character_count);\n    this.increaseValue(\"episode_count\", this.props.episode_count);\n    this.increaseValue(\"location_count\", this.props.location_count);\n  }\n  render() {\n    return (\n      <Wrapper>\n        <LogoWrapper>\n          <Logo src=\"/logo.png\" />\n          <span>\n            Created by{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/wiki/Justin_Roiland\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Justin Roiland\n            </a>{\" \"}\n            and{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/wiki/Dan_Harmon\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Dan Harmon\n            </a>\n          </span>\n        </LogoWrapper>\n        <InfoWrapper>\n          <Info>\n            <InfoHeader>{this.state.episode_count}</InfoHeader>\n            <span>Episodes on screen</span>\n          </Info>\n          <Info>\n            <InfoHeader>{this.state.location_count}</InfoHeader>\n            <span>Locations Travelled</span>\n          </Info>\n          <Info>\n            <InfoHeader>{this.state.character_count}</InfoHeader>\n            <span>Characters Created</span>\n          </Info>\n        </InfoWrapper>\n        <NetflixLink\n          href=\"https://www.netflix.com/th-en/title/80014749\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          Available on\n          <div>\n            <NetflixLogo src=\"/Netflix_icon.png\" />\n          </div>\n        </NetflixLink>\n        <InfoWrapper>\n          <Info>\n            <a\n              href=\"https://www.imdb.com/title/tt2861424/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              9.2/10 IMDb\n            </a>\n          </Info>\n          <Info>\n            <a\n              href=\"https://www.rottentomatoes.com/tv/rick_and_morty\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              95% Rotten Tomatoes\n            </a>\n          </Info>\n        </InfoWrapper>\n      </Wrapper>\n    );\n  }\n}\n\nexport default class Home extends React.Component {\n  state = {\n    ready: false,\n    character_count: 0,\n    episode_count: 0,\n    location_count: 0\n  };\n\n  async componentDidMount() {\n    const character_count = await getCharacterCount();\n    const episode_count = await getEpisodeCount();\n    const location_count = await getLocationCount();\n    this.setState({\n      ready: true,\n      character_count,\n      episode_count,\n      location_count\n    });\n  }\n\n  render() {\n    if (this.state.ready) {\n      return (\n        <Body\n          character_count={this.state.character_count}\n          episode_count={this.state.episode_count}\n          location_count={this.state.location_count}\n        />\n      );\n    } else {\n      return <Loading />;\n    }\n  }\n}\n","import {\n  faChevronLeft,\n  faChevronRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Loading from \"../components/Loading\";\nimport { FadeIn } from \"../utils/Animation\";\nimport { getLocations } from \"../services\";\nimport {\n  Column,\n  ColumnContent,\n  Container,\n  Info,\n  InfoHeader,\n  PageLink,\n  Pager,\n  Row\n} from \"../utils/Elements\";\n\nconst Wrapper = styled(Container)`\n  animation: ${FadeIn} 0.3s ease;\n`;\n\nlet LocationColumns = null;\n\nexport default class Locations extends React.Component {\n  state = {\n    ready: false\n  };\n  data = null;\n  page = null;\n  maxPage = 0;\n\n  async getData() {\n    this.page = parseInt(this.props.page);\n    this.setState({ ready: false });\n    const data = await getLocations(this.page);\n    this.data = data;\n    LocationColumns = data.results.map(location => (\n      <Column key={`${location.id}-card`}>\n        <ColumnContent>\n          <Info>\n            <InfoHeader>{location.name}</InfoHeader>\n            <span>Type: {location.type}</span>\n            <span>Dimension: {location.dimension}</span>\n          </Info>\n        </ColumnContent>\n      </Column>\n    ));\n    this.setState({ ready: true });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.page !== this.props.page) {\n      this.getData();\n    }\n  }\n\n  render() {\n    if (this.state.ready) {\n      let PageLinks = [];\n      for (let index = 1; index <= this.data.info.pages; index++) {\n        PageLinks.push(\n          <PageLink key={`page-${index}`}>\n            <NavLink activeClassName=\"active\" to={`/locations/page/${index}`}>\n              {index}\n            </NavLink>\n          </PageLink>\n        );\n      }\n      this.maxPage = this.page + 2;\n      PageLinks = PageLinks.slice(\n        this.page >= 3\n          ? this.page -\n              (this.maxPage > this.data.info.pages\n                ? this.data.info.pages > 5\n                  ? 5\n                  : 0\n                : 3)\n          : 0,\n        this.maxPage\n      );\n      return (\n        <div>\n          <Wrapper>\n            <Row>{LocationColumns}</Row>\n          </Wrapper>\n          <Pager>\n            <PageLink hidden={this.page > 1 ? false : true}>\n              <Link to={`/locations/page/${this.page - 1}`}>\n                <FontAwesomeIcon icon={faChevronLeft} />\n              </Link>\n            </PageLink>\n            {PageLinks}\n            <PageLink\n              hidden={this.maxPage >= this.data.info.pages ? true : false}\n            >\n              ...\n            </PageLink>\n            <PageLink\n              hidden={this.maxPage >= this.data.info.pages ? true : false}\n            >\n              <Link to={`/locations/page/${this.data.info.pages}`}>\n                {this.data.info.pages}\n              </Link>\n            </PageLink>\n            <PageLink\n              hidden={this.maxPage >= this.data.info.pages ? true : false}\n            >\n              <Link to={`/locations/page/${this.page + 1}`}>\n                <FontAwesomeIcon icon={faChevronRight} />\n              </Link>\n            </PageLink>\n          </Pager>\n        </div>\n      );\n    }\n    return <Loading />;\n  }\n}\n","import { Redirect, Route, Switch, useParams } from \"react-router-dom\";\nimport Characters from \"./views/Characters\";\nimport CharacterDetail from \"./views/CharacterDetail\";\nimport Episodes from \"./views/Episodes\";\nimport Home from \"./views/Home\";\nimport Locations from \"./views/Locations\";\n\nconst CharacterChild = () => <Characters page={useParams().page} />;\nconst CharacterDetailChild = () => <CharacterDetail id={useParams().id} />;\nconst LocationChild = () => <Locations page={useParams().page} />;\nconst EpisodeChild = () => <Episodes page={useParams().page} />;\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/characters/page/:page\" children={<CharacterChild />} />\n      <Route\n        path=\"/characters/detail/:id\"\n        children={<CharacterDetailChild />}\n      />\n      <Route path=\"/locations/page/:page\" children={<LocationChild />} />\n      <Route path=\"/episodes/page/:page\" children={<EpisodeChild />} />\n      <Route path=\"/home\" component={Home} />\n      <Route\n        exact\n        path=\"/characters\"\n        render={() => {\n          return <Redirect to=\"/characters/page/1\" />;\n        }}\n      />\n      <Route\n        exact\n        path=\"/locations\"\n        render={() => {\n          return <Redirect to=\"/locations/page/1\" />;\n        }}\n      />\n      <Route\n        exact\n        path=\"/episodes\"\n        render={() => {\n          return <Redirect to=\"/episodes/page/1\" />;\n        }}\n      />\n      <Route\n        exact\n        path=\"/\"\n        render={() => {\n          return <Redirect to=\"/home\" />;\n        }}\n      />\n    </Switch>\n  );\n}\n","import styled from \"styled-components\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport Routes from \"./Routes\";\n\nconst View = styled.div`\n  padding-top: 5rem;\n`;\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <Navbar />\n      <View>\n        <Routes />\n      </View>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}